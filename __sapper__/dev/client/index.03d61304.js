import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_each_argument, a as validate_slots, e as element, t as text, c as claim_element, b as children, f as claim_text, g as detach_dev, h as attr_dev, j as add_location, k as insert_dev, l as append_dev, n as noop, m as space, o as claim_space, p as set_style, q as svg_element, r as query_selector_all, u as destroy_each } from './client.2aacfbc8.js';

/* src/routes/index.svelte generated by Svelte v3.22.2 */

const file = "src/routes/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[2] = list[i];
	return child_ctx;
}

// (45:8) {#each links as link}
function create_each_block(ctx) {
	let a;
	let t_value = /*link*/ ctx[2].title + "";
	let t;
	let a_href_value;

	const block = {
		c: function create() {
			a = element("a");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			t = claim_text(a_nodes, t_value);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "class", "mx-6 text-sm");
			attr_dev(a, "href", a_href_value = /*link*/ ctx[2].url);
			add_location(a, file, 45, 10, 929);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(45:8) {#each links as link}",
		ctx
	});

	return block;
}

// (50:6) {#if user}
function create_if_block_1(ctx) {
	let div4;
	let div2;
	let div0;
	let t0;
	let div1;
	let h1;
	let t1;
	let t2;
	let p;
	let t3;
	let t4;
	let div3;
	let button;
	let t5;

	const block = {
		c: function create() {
			div4 = element("div");
			div2 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			h1 = element("h1");
			t1 = text("Soglacen");
			t2 = space();
			p = element("p");
			t3 = text("soglacen@gmail.com");
			t4 = space();
			div3 = element("div");
			button = element("button");
			t5 = text("Panel");
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div2 = claim_element(div4_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { style: true, class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h1 = claim_element(div1_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Soglacen");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			p = claim_element(div1_nodes, "P", { class: true });
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "soglacen@gmail.com");
			p_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t4 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			button = claim_element(div3_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t5 = claim_text(button_nodes, "Panel");
			button_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(div0, "background", "url('https://media.discordapp.net/attachments/661496619249696769/736637982513037312/945e599c-3a1e-44d5-a23e-d6acc2ca47a5.jpg')");
			attr_dev(div0, "class", "w-8 h-8 rounded-full");
			add_location(div0, file, 54, 12, 1202);
			attr_dev(h1, "class", "text-sm");
			add_location(h1, file, 58, 14, 1487);
			attr_dev(p, "class", "text-xs text-gray-800");
			add_location(p, file, 59, 14, 1535);
			attr_dev(div1, "class", "items-center mx-2");
			add_location(div1, file, 57, 12, 1441);
			attr_dev(div2, "class", "flex items-center");
			add_location(div2, file, 52, 10, 1130);
			attr_dev(button, "class", "px-4 py-2 text-xs rounded-full bg-blue-400 hover:bg-blue-600 shadow-md text-white");
			add_location(button, file, 65, 12, 1706);
			attr_dev(div3, "class", "flex mx-4");
			add_location(div3, file, 64, 10, 1670);
			attr_dev(div4, "class", "hidden md:flex items-center mx-6");
			add_location(div4, file, 51, 8, 1073);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div2);
			append_dev(div2, div0);
			append_dev(div2, t0);
			append_dev(div2, div1);
			append_dev(div1, h1);
			append_dev(h1, t1);
			append_dev(div1, t2);
			append_dev(div1, p);
			append_dev(p, t3);
			append_dev(div4, t4);
			append_dev(div4, div3);
			append_dev(div3, button);
			append_dev(button, t5);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(50:6) {#if user}",
		ctx
	});

	return block;
}

// (139:12) {#if user}
function create_if_block(ctx) {
	let h10;
	let t0;
	let t1;
	let p0;
	let t2;
	let t3;
	let div3;
	let div2;
	let div0;
	let t4;
	let div1;
	let h11;
	let t5;
	let t6;
	let p1;
	let t7;
	let t8;
	let button;
	let t9;

	const block = {
		c: function create() {
			h10 = element("h1");
			t0 = text("Current user:");
			t1 = space();
			p0 = element("p");
			t2 = text("And yes, you can change it anytime!");
			t3 = space();
			div3 = element("div");
			div2 = element("div");
			div0 = element("div");
			t4 = space();
			div1 = element("div");
			h11 = element("h1");
			t5 = text("Soglacen");
			t6 = space();
			p1 = element("p");
			t7 = text("soglacen@gmai...");
			t8 = space();
			button = element("button");
			t9 = text("Change");
			this.h();
		},
		l: function claim(nodes) {
			h10 = claim_element(nodes, "H1", { class: true });
			var h10_nodes = children(h10);
			t0 = claim_text(h10_nodes, "Current user:");
			h10_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			p0 = claim_element(nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "And yes, you can change it anytime!");
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);
			div3 = claim_element(nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { style: true, class: true });
			children(div0).forEach(detach_dev);
			t4 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h11 = claim_element(div1_nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t5 = claim_text(h11_nodes, "Soglacen");
			h11_nodes.forEach(detach_dev);
			t6 = claim_space(div1_nodes);
			p1 = claim_element(div1_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t7 = claim_text(p1_nodes, "soglacen@gmai...");
			p1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t8 = claim_space(div3_nodes);
			button = claim_element(div3_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t9 = claim_text(button_nodes, "Change");
			button_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h10, "class", "text-2xl font-semibold");
			add_location(h10, file, 139, 14, 4512);
			attr_dev(p0, "class", "text-gray-700 text-xs");
			add_location(p0, file, 140, 14, 4580);
			set_style(div0, "background", "url('https://media.discordapp.net/attachments/661496619249696769/736637982513037312/945e599c-3a1e-44d5-a23e-d6acc2ca47a5.jpg')");
			attr_dev(div0, "class", "w-8 h-8 rounded-full");
			add_location(div0, file, 145, 18, 4821);
			attr_dev(h11, "class", "text-sm");
			add_location(h11, file, 149, 20, 5124);
			attr_dev(p1, "class", "text-xs text-gray-800");
			add_location(p1, file, 150, 20, 5178);
			attr_dev(div1, "class", "items-center mx-2");
			add_location(div1, file, 148, 18, 5072);
			attr_dev(div2, "class", "flex items-center");
			add_location(div2, file, 143, 16, 4737);
			attr_dev(button, "class", "px-4 py-2 text-xs rounded-full bg-blue-400 hover:bg-blue-600 shadow-md text-white");
			add_location(button, file, 155, 16, 5335);
			attr_dev(div3, "class", "flex justify-between mt-4 items-center");
			add_location(div3, file, 142, 14, 4668);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h10, anchor);
			append_dev(h10, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p0, anchor);
			append_dev(p0, t2);
			insert_dev(target, t3, anchor);
			insert_dev(target, div3, anchor);
			append_dev(div3, div2);
			append_dev(div2, div0);
			append_dev(div2, t4);
			append_dev(div2, div1);
			append_dev(div1, h11);
			append_dev(h11, t5);
			append_dev(div1, t6);
			append_dev(div1, p1);
			append_dev(p1, t7);
			append_dev(div3, t8);
			append_dev(div3, button);
			append_dev(button, t9);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h10);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(div3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(139:12) {#if user}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let link;
	let t0;
	let main;
	let div3;
	let div0;
	let h10;
	let t1;
	let t2;
	let p0;
	let t3;
	let t4;
	let div2;
	let div1;
	let t5;
	let t6;
	let div31;
	let div5;
	let h11;
	let t7;
	let t8;
	let p1;
	let t9;
	let t10;
	let div4;
	let button0;
	let t11;
	let t12;
	let button1;
	let img;
	let img_src_value;
	let t13;
	let t14;
	let div30;
	let div13;
	let div9;
	let div7;
	let div6;
	let t15;
	let t16;
	let span0;
	let t17;
	let t18;
	let div8;
	let span1;
	let svg;
	let polyline;
	let t19;
	let div12;
	let h12;
	let t20;
	let t21;
	let div10;
	let p2;
	let t22;
	let t23;
	let div11;
	let t24;
	let div21;
	let div17;
	let div15;
	let div14;
	let t25;
	let t26;
	let div16;
	let t27;
	let div20;
	let h13;
	let t28;
	let t29;
	let div18;
	let p3;
	let t30;
	let div19;
	let t31;
	let div29;
	let div25;
	let div23;
	let div22;
	let t32;
	let t33;
	let div24;
	let t34;
	let div28;
	let h14;
	let t35;
	let t36;
	let div26;
	let p4;
	let t37;
	let div27;
	let each_value = /*links*/ ctx[1];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	let if_block0 = /*user*/ ctx[0] && create_if_block_1(ctx);
	let if_block1 = /*user*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			link = element("link");
			t0 = space();
			main = element("main");
			div3 = element("div");
			div0 = element("div");
			h10 = element("h1");
			t1 = text("wavees");
			t2 = space();
			p0 = element("p");
			t3 = text("Tunnels");
			t4 = space();
			div2 = element("div");
			div1 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t5 = space();
			if (if_block0) if_block0.c();
			t6 = space();
			div31 = element("div");
			div5 = element("div");
			h11 = element("h1");
			t7 = text("Expose your projects");
			t8 = space();
			p1 = element("p");
			t9 = text("Wavees Tunnels is a yet simple and fully free service for tunneling http/https and tcp from localhost to outter internet.");
			t10 = space();
			div4 = element("div");
			button0 = element("button");
			t11 = text("Documentation");
			t12 = space();
			button1 = element("button");
			img = element("img");
			t13 = text("\n          Servers location");
			t14 = space();
			div30 = element("div");
			div13 = element("div");
			div9 = element("div");
			div7 = element("div");
			div6 = element("div");
			t15 = text("1.");
			t16 = space();
			span0 = element("span");
			t17 = text("*Optional step");
			t18 = space();
			div8 = element("div");
			span1 = element("span");
			svg = svg_element("svg");
			polyline = svg_element("polyline");
			t19 = space();
			div12 = element("div");
			h12 = element("h1");
			t20 = text("User Account");
			t21 = space();
			div10 = element("div");
			p2 = element("p");
			t22 = text("To make it much more convenient for you to manage your tunnels, we offer you to log in using Wavees services.");
			t23 = space();
			div11 = element("div");
			if (if_block1) if_block1.c();
			t24 = space();
			div21 = element("div");
			div17 = element("div");
			div15 = element("div");
			div14 = element("div");
			t25 = text("2.");
			t26 = space();
			div16 = element("div");
			t27 = space();
			div20 = element("div");
			h13 = element("h1");
			t28 = text("Create new Tunnel");
			t29 = space();
			div18 = element("div");
			p3 = element("p");
			t30 = space();
			div19 = element("div");
			t31 = space();
			div29 = element("div");
			div25 = element("div");
			div23 = element("div");
			div22 = element("div");
			t32 = text("3.");
			t33 = space();
			div24 = element("div");
			t34 = space();
			div28 = element("div");
			h14 = element("h1");
			t35 = text("Connect to Tunnel");
			t36 = space();
			div26 = element("div");
			p4 = element("p");
			t37 = space();
			div27 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-ukt33n\"]", document.head);
			link = claim_element(head_nodes, "LINK", { rel: true, href: true });
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			div3 = claim_element(main_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div0 = claim_element(div3_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h10 = claim_element(div0_nodes, "H1", { style: true, class: true });
			var h10_nodes = children(h10);
			t1 = claim_text(h10_nodes, "wavees");
			h10_nodes.forEach(detach_dev);
			t2 = claim_space(div0_nodes);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t3 = claim_text(p0_nodes, "Tunnels");
			p0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t4 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div1_nodes);
			}

			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div2_nodes);
			if (if_block0) if_block0.l(div2_nodes);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t6 = claim_space(main_nodes);
			div31 = claim_element(main_nodes, "DIV", { style: true, class: true });
			var div31_nodes = children(div31);
			div5 = claim_element(div31_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			h11 = claim_element(div5_nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t7 = claim_text(h11_nodes, "Expose your projects");
			h11_nodes.forEach(detach_dev);
			t8 = claim_space(div5_nodes);
			p1 = claim_element(div5_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t9 = claim_text(p1_nodes, "Wavees Tunnels is a yet simple and fully free service for tunneling http/https and tcp from localhost to outter internet.");
			p1_nodes.forEach(detach_dev);
			t10 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			button0 = claim_element(div4_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t11 = claim_text(button0_nodes, "Documentation");
			button0_nodes.forEach(detach_dev);
			t12 = claim_space(div4_nodes);
			button1 = claim_element(div4_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);

			img = claim_element(button1_nodes, "IMG", {
				class: true,
				style: true,
				src: true,
				alt: true
			});

			t13 = claim_text(button1_nodes, "\n          Servers location");
			button1_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t14 = claim_space(div31_nodes);
			div30 = claim_element(div31_nodes, "DIV", { class: true });
			var div30_nodes = children(div30);
			div13 = claim_element(div30_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div9 = claim_element(div13_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			t15 = claim_text(div6_nodes, "1.");
			div6_nodes.forEach(detach_dev);
			t16 = claim_space(div7_nodes);
			span0 = claim_element(div7_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t17 = claim_text(span0_nodes, "*Optional step");
			span0_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			t18 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", {});
			var div8_nodes = children(div8);
			span1 = claim_element(div8_nodes, "SPAN", { style: true });
			var span1_nodes = children(span1);

			svg = claim_element(
				span1_nodes,
				"svg",
				{
					xmlns: true,
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			polyline = claim_element(svg_nodes, "polyline", { points: true }, 1);
			children(polyline).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			span1_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			t19 = claim_space(div13_nodes);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			h12 = claim_element(div12_nodes, "H1", { class: true });
			var h12_nodes = children(h12);
			t20 = claim_text(h12_nodes, "User Account");
			h12_nodes.forEach(detach_dev);
			t21 = claim_space(div12_nodes);
			div10 = claim_element(div12_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			p2 = claim_element(div10_nodes, "P", {});
			var p2_nodes = children(p2);
			t22 = claim_text(p2_nodes, "To make it much more convenient for you to manage your tunnels, we offer you to log in using Wavees services.");
			p2_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			t23 = claim_space(div12_nodes);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			if (if_block1) if_block1.l(div11_nodes);
			div11_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			t24 = claim_space(div30_nodes);
			div21 = claim_element(div30_nodes, "DIV", { class: true });
			var div21_nodes = children(div21);
			div17 = claim_element(div21_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			div15 = claim_element(div17_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			t25 = claim_text(div14_nodes, "2.");
			div14_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			t26 = claim_space(div17_nodes);
			div16 = claim_element(div17_nodes, "DIV", {});
			var div16_nodes = children(div16);
			div16_nodes.forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			t27 = claim_space(div21_nodes);
			div20 = claim_element(div21_nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			h13 = claim_element(div20_nodes, "H1", { class: true });
			var h13_nodes = children(h13);
			t28 = claim_text(h13_nodes, "Create new Tunnel");
			h13_nodes.forEach(detach_dev);
			t29 = claim_space(div20_nodes);
			div18 = claim_element(div20_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			p3 = claim_element(div18_nodes, "P", {});
			children(p3).forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			t30 = claim_space(div20_nodes);
			div19 = claim_element(div20_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			div19_nodes.forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			div21_nodes.forEach(detach_dev);
			t31 = claim_space(div30_nodes);
			div29 = claim_element(div30_nodes, "DIV", { class: true });
			var div29_nodes = children(div29);
			div25 = claim_element(div29_nodes, "DIV", { class: true });
			var div25_nodes = children(div25);
			div23 = claim_element(div25_nodes, "DIV", { class: true });
			var div23_nodes = children(div23);
			div22 = claim_element(div23_nodes, "DIV", { class: true });
			var div22_nodes = children(div22);
			t32 = claim_text(div22_nodes, "3.");
			div22_nodes.forEach(detach_dev);
			div23_nodes.forEach(detach_dev);
			t33 = claim_space(div25_nodes);
			div24 = claim_element(div25_nodes, "DIV", {});
			var div24_nodes = children(div24);
			div24_nodes.forEach(detach_dev);
			div25_nodes.forEach(detach_dev);
			t34 = claim_space(div29_nodes);
			div28 = claim_element(div29_nodes, "DIV", { class: true });
			var div28_nodes = children(div28);
			h14 = claim_element(div28_nodes, "H1", { class: true });
			var h14_nodes = children(h14);
			t35 = claim_text(h14_nodes, "Connect to Tunnel");
			h14_nodes.forEach(detach_dev);
			t36 = claim_space(div28_nodes);
			div26 = claim_element(div28_nodes, "DIV", { class: true });
			var div26_nodes = children(div26);
			p4 = claim_element(div26_nodes, "P", {});
			children(p4).forEach(detach_dev);
			div26_nodes.forEach(detach_dev);
			t37 = claim_space(div28_nodes);
			div27 = claim_element(div28_nodes, "DIV", { class: true });
			var div27_nodes = children(div27);
			div27_nodes.forEach(detach_dev);
			div28_nodes.forEach(detach_dev);
			div29_nodes.forEach(detach_dev);
			div30_nodes.forEach(detach_dev);
			div31_nodes.forEach(detach_dev);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(link, "rel", "stylesheet");
			attr_dev(link, "href", "./fonts/Junegull/junegull.css");
			add_location(link, file, 24, 1, 296);
			set_style(h10, "font-family", "Junegull");
			attr_dev(h10, "class", "text-xl");
			add_location(h10, file, 35, 6, 611);
			attr_dev(p0, "class", "text-sm text-gray-700");
			add_location(p0, file, 36, 6, 680);
			attr_dev(div0, "class", "items-center");
			add_location(div0, file, 34, 4, 578);
			attr_dev(div1, "class", "hidden md:flex");
			add_location(div1, file, 43, 6, 860);
			attr_dev(div2, "class", "flex items-center");
			add_location(div2, file, 40, 4, 767);
			attr_dev(div3, "class", "absolute inset-x-0 top-0 w-full flex justify-between px-2 md:px-6 lg:px-12 py-4 lg:py-6");
			add_location(div3, file, 32, 2, 450);
			attr_dev(h11, "class", "text-3xl font-semibold");
			add_location(h11, file, 79, 6, 2144);
			attr_dev(p1, "class", "text-sm text-gray-800 mt-2");
			add_location(p1, file, 80, 6, 2211);
			attr_dev(button0, "class", "shadow-md w-full px-6 py-2 md:mx-4 bg-blue-400 hover:bg-blue-600 text-white rounded-full");
			add_location(button0, file, 85, 8, 2507);
			attr_dev(img, "class", "mx-4 hidden md:block");
			set_style(img, "width", "1.2rem");
			if (img.src !== (img_src_value = "./icons/globe.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Globe Icon");
			add_location(img, file, 91, 10, 2810);
			attr_dev(button1, "class", "mt-6 md:mt-0 w-full px-6 py-2 md:mx-4 text-sm flex justify-center items-center");
			add_location(button1, file, 90, 8, 2704);
			attr_dev(div4, "class", "flex flex-col md:flex-row mt-6 px-8 md:px-0");
			add_location(div4, file, 83, 6, 2405);
			attr_dev(div5, "class", "w-2/5 flex flex-col justify-center md:justify-start px-4 md:px-8");
			add_location(div5, file, 77, 4, 2058);
			attr_dev(div6, "class", "rounded-full w-8 h-8 bg-white p-1 text-center text-black text-sm font-semibold");
			add_location(div6, file, 108, 12, 3317);
			attr_dev(span0, "class", "mx-2 text-xs");
			add_location(span0, file, 113, 12, 3495);
			attr_dev(div7, "class", "flex items-start");
			add_location(div7, file, 106, 10, 3241);
			attr_dev(polyline, "points", "20 6 9 17 4 12");
			add_location(polyline, file, 121, 220, 3898);
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "width", "24");
			attr_dev(svg, "height", "24");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "stroke", "#4CAF50");
			attr_dev(svg, "stroke-width", "2");
			attr_dev(svg, "stroke-linecap", "round");
			attr_dev(svg, "stroke-linejoin", "round");
			attr_dev(svg, "class", "feather feather-check");
			add_location(svg, file, 121, 14, 3692);
			set_style(span1, "width", "1.2rem");
			add_location(span1, file, 120, 12, 3648);
			add_location(div8, file, 119, 10, 3630);
			attr_dev(div9, "class", "w-full flex items-center justify-between");
			add_location(div9, file, 105, 8, 3176);
			attr_dev(h12, "class", "text-3xl font-semibold");
			add_location(h12, file, 129, 10, 4131);
			add_location(p2, file, 133, 12, 4284);
			attr_dev(div10, "class", "mt-2 text-gray-800 text-sm");
			add_location(div10, file, 132, 10, 4231);
			attr_dev(div11, "class", "mt-6");
			add_location(div11, file, 137, 10, 4456);
			attr_dev(div12, "class", "w-full bg-white rounded-lg mt-4 py-6 px-4");
			add_location(div12, file, 127, 8, 4040);
			attr_dev(div13, "class", "w-1/3 relative px-4");
			add_location(div13, file, 103, 6, 3105);
			attr_dev(div14, "class", "rounded-full w-8 h-8 bg-white p-1 text-center text-black text-sm font-semibold");
			add_location(div14, file, 172, 12, 5843);
			attr_dev(div15, "class", "flex items-start");
			add_location(div15, file, 170, 10, 5767);
			add_location(div16, file, 178, 10, 6030);
			attr_dev(div17, "class", "w-full flex items-center justify-between");
			add_location(div17, file, 169, 8, 5702);
			attr_dev(h13, "class", "text-3xl font-semibold");
			add_location(h13, file, 185, 10, 6197);
			add_location(p3, file, 189, 12, 6355);
			attr_dev(div18, "class", "mt-2 text-gray-800 text-sm");
			add_location(div18, file, 188, 10, 6302);
			attr_dev(div19, "class", "mt-6");
			add_location(div19, file, 193, 10, 6418);
			attr_dev(div20, "class", "w-full bg-white rounded-lg mt-4 py-6 px-4");
			add_location(div20, file, 183, 8, 6106);
			attr_dev(div21, "class", "w-1/3 relative px-4");
			add_location(div21, file, 167, 6, 5631);
			attr_dev(div22, "class", "rounded-full w-8 h-8 bg-white p-1 text-center text-black text-sm font-semibold");
			add_location(div22, file, 207, 12, 6772);
			attr_dev(div23, "class", "flex items-start");
			add_location(div23, file, 205, 10, 6696);
			add_location(div24, file, 213, 10, 6959);
			attr_dev(div25, "class", "w-full flex items-center justify-between");
			add_location(div25, file, 204, 8, 6631);
			attr_dev(h14, "class", "text-3xl font-semibold");
			add_location(h14, file, 220, 10, 7126);
			add_location(p4, file, 224, 12, 7284);
			attr_dev(div26, "class", "mt-2 text-gray-800 text-sm");
			add_location(div26, file, 223, 10, 7231);
			attr_dev(div27, "class", "mt-6");
			add_location(div27, file, 228, 10, 7350);
			attr_dev(div28, "class", "w-full bg-white rounded-lg mt-4 py-6 px-4");
			add_location(div28, file, 218, 8, 7035);
			attr_dev(div29, "class", "w-1/3 relative px-4");
			add_location(div29, file, 202, 6, 6560);
			attr_dev(div30, "class", "w-3/5 flex");
			add_location(div30, file, 98, 4, 3014);
			set_style(div31, "min-height", "100vh");
			attr_dev(div31, "class", "bg-gray-200 w-full flex flex-col md:flex-row items-center");
			add_location(div31, file, 75, 2, 1937);
			attr_dev(main, "class", "w-full relative");
			add_location(main, file, 30, 0, 399);
		},
		m: function mount(target, anchor) {
			append_dev(document.head, link);
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);
			append_dev(main, div3);
			append_dev(div3, div0);
			append_dev(div0, h10);
			append_dev(h10, t1);
			append_dev(div0, t2);
			append_dev(div0, p0);
			append_dev(p0, t3);
			append_dev(div3, t4);
			append_dev(div3, div2);
			append_dev(div2, div1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div1, null);
			}

			append_dev(div2, t5);
			if (if_block0) if_block0.m(div2, null);
			append_dev(main, t6);
			append_dev(main, div31);
			append_dev(div31, div5);
			append_dev(div5, h11);
			append_dev(h11, t7);
			append_dev(div5, t8);
			append_dev(div5, p1);
			append_dev(p1, t9);
			append_dev(div5, t10);
			append_dev(div5, div4);
			append_dev(div4, button0);
			append_dev(button0, t11);
			append_dev(div4, t12);
			append_dev(div4, button1);
			append_dev(button1, img);
			append_dev(button1, t13);
			append_dev(div31, t14);
			append_dev(div31, div30);
			append_dev(div30, div13);
			append_dev(div13, div9);
			append_dev(div9, div7);
			append_dev(div7, div6);
			append_dev(div6, t15);
			append_dev(div7, t16);
			append_dev(div7, span0);
			append_dev(span0, t17);
			append_dev(div9, t18);
			append_dev(div9, div8);
			append_dev(div8, span1);
			append_dev(span1, svg);
			append_dev(svg, polyline);
			append_dev(div13, t19);
			append_dev(div13, div12);
			append_dev(div12, h12);
			append_dev(h12, t20);
			append_dev(div12, t21);
			append_dev(div12, div10);
			append_dev(div10, p2);
			append_dev(p2, t22);
			append_dev(div12, t23);
			append_dev(div12, div11);
			if (if_block1) if_block1.m(div11, null);
			append_dev(div30, t24);
			append_dev(div30, div21);
			append_dev(div21, div17);
			append_dev(div17, div15);
			append_dev(div15, div14);
			append_dev(div14, t25);
			append_dev(div17, t26);
			append_dev(div17, div16);
			append_dev(div21, t27);
			append_dev(div21, div20);
			append_dev(div20, h13);
			append_dev(h13, t28);
			append_dev(div20, t29);
			append_dev(div20, div18);
			append_dev(div18, p3);
			append_dev(div20, t30);
			append_dev(div20, div19);
			append_dev(div30, t31);
			append_dev(div30, div29);
			append_dev(div29, div25);
			append_dev(div25, div23);
			append_dev(div23, div22);
			append_dev(div22, t32);
			append_dev(div25, t33);
			append_dev(div25, div24);
			append_dev(div29, t34);
			append_dev(div29, div28);
			append_dev(div28, h14);
			append_dev(h14, t35);
			append_dev(div28, t36);
			append_dev(div28, div26);
			append_dev(div26, p4);
			append_dev(div28, t37);
			append_dev(div28, div27);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*links*/ 2) {
				each_value = /*links*/ ctx[1];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			detach_dev(link);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			destroy_each(each_blocks, detaching);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let user = true;

	// Temporary array.
	let links = [
		{ id: 0, title: "About", url: "/" },
		{ id: 1, title: "Use Cases", url: "/" },
		{ id: 2, title: "Source Code", url: "/" }
	];

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);
	$$self.$capture_state = () => ({ user, links });

	$$self.$inject_state = $$props => {
		if ("user" in $$props) $$invalidate(0, user = $$props.user);
		if ("links" in $$props) $$invalidate(1, links = $$props.links);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [user, links];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
